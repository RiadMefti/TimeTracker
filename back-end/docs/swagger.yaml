basePath: /
definitions:
  models.ApiErrorResponse:
    properties:
      Message:
        type: string
      Success:
        type: boolean
    type: object
  models.ApiResponse-array_models_Project:
    properties:
      Data:
        items:
          $ref: '#/definitions/models.Project'
        type: array
      Message:
        type: string
      Success:
        type: boolean
    type: object
  models.ApiResponse-array_models_TimeEntry:
    properties:
      Data:
        items:
          $ref: '#/definitions/models.TimeEntry'
        type: array
      Message:
        type: string
      Success:
        type: boolean
    type: object
  models.ApiResponse-models_User:
    properties:
      Data:
        $ref: '#/definitions/models.User'
      Message:
        type: string
      Success:
        type: boolean
    type: object
  models.AssignProjectPayload:
    properties:
      ProjectID:
        type: integer
    type: object
  models.Project:
    properties:
      Color:
        type: string
      Description:
        type: string
      ID:
        type: integer
      Name:
        type: string
    type: object
  models.ProjectCreate:
    properties:
      Color:
        type: string
      Description:
        type: string
      Name:
        type: string
    type: object
  models.TimeEntry:
    properties:
      Description:
        type: string
      EndDate:
        type: string
      ID:
        type: integer
      Name:
        type: string
      ProjectID:
        type: integer
      StartDate:
        type: string
    type: object
  models.TimeEntryCreate:
    properties:
      Description:
        type: string
      EndDate:
        type: string
      Name:
        type: string
      ProjectID:
        type: integer
      StartDate:
        type: string
    type: object
  models.User:
    properties:
      Email:
        type: string
      ID:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: This is the back-end API for the TimeTracker application.
  title: TimeTracker Back-end API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Create or log a user
      produces:
      - application/json
      responses:
        "200":
          description: user Exists
          schema:
            $ref: '#/definitions/models.ApiResponse-models_User'
        "201":
          description: user Created
          schema:
            $ref: '#/definitions/models.ApiResponse-models_User'
        "401":
          description: user not found
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "500":
          description: error message
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
      security:
      - BearerAuth: []
      summary: Create or log a user
      tags:
      - auth
  /projects/:
    get:
      description: Retrieve all projects for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse-array_models_Project'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all user projects
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: Create a new project for the authenticated user
      parameters:
      - description: Project to create
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/models.ProjectCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse-array_models_Project'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new project
      tags:
      - projects
    put:
      consumes:
      - application/json
      description: Update an existing project for the authenticated user
      parameters:
      - description: Project to update
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/models.Project'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse-array_models_Project'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
      security:
      - BearerAuth: []
      summary: Update a project
      tags:
      - projects
  /projects/{id}:
    delete:
      description: Delete a project by ID for the authenticated user
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse-array_models_Project'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a project
      tags:
      - projects
  /time-entries/:
    get:
      description: Retrieve all time entries for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse-array_models_TimeEntry'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all user time entries
      tags:
      - time-entries
    post:
      consumes:
      - application/json
      description: Create a new time entry for the authenticated user
      parameters:
      - description: Time entry to create
        in: body
        name: timeEntry
        required: true
        schema:
          $ref: '#/definitions/models.TimeEntryCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse-array_models_TimeEntry'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new time entry
      tags:
      - time-entries
    put:
      consumes:
      - application/json
      description: Update an existing time entry for the authenticated user
      parameters:
      - description: Time entry to update
        in: body
        name: timeEntry
        required: true
        schema:
          $ref: '#/definitions/models.TimeEntry'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse-array_models_TimeEntry'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
      security:
      - BearerAuth: []
      summary: Update a time entry
      tags:
      - time-entries
  /time-entries/{id}:
    delete:
      description: Delete a time entry by ID for the authenticated user
      parameters:
      - description: Time Entry ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse-array_models_TimeEntry'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a time entry
      tags:
      - time-entries
  /time-entries/{id}/assign-project:
    patch:
      consumes:
      - application/json
      description: Assign or unassign a project to a time entry for the authenticated
        user
      parameters:
      - description: Time Entry ID
        in: path
        name: id
        required: true
        type: integer
      - description: Project assignment payload
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/models.AssignProjectPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse-array_models_TimeEntry'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
      security:
      - BearerAuth: []
      summary: Assign a project to a time entry
      tags:
      - time-entries
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
